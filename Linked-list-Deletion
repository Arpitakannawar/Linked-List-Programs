#include<stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node * next;
};

void linkedlistTraversal(struct Node *ptr)
{
     while(ptr != NULL)
     {
        printf("Element : %d\n",ptr->data);
        ptr=ptr->next;
     }
}

//To delete first node of Linked list
struct Node *deleteFirst(struct Node *head)
{
    struct Node *ptr=head;
    head=head->next;
    free(ptr);
    return head;
}

//To delete element at given Index of Linked list 
struct Node *deleteAtIndex(struct Node *head,int index)
{
    struct Node *p=head;
    struct Node *q=head->next;
    int i=0;
    for(i=0;i<index-1;i++){
        p=p->next;
        q=q->next;
    }
    p->next=q->next;
    free(q);
    return head;
}

//To delete last Node of Linked list
struct Node *deleteAtEnd(struct Node *head)
{
    struct Node *p=head;
    struct Node *q=head->next;
    while(q->next != NULL){
        p=p->next;
        q=q->next;
    }
    p->next=NULL;
    free(q);
    return head;
}

//Deleting the element with a given value from a Linked list
struct Node *deletegivenNode(struct Node *head,int value)
{
     struct Node *p=head;
     struct Node *q=head->next;
     while(q->data!=value && q->next!=NULL)
     {
        p=p->next;
        q=q->next;
     }
     if(q->data == value){
        p->next=q->next;
        free(q);
        return head;
     }
}
int main()
{
    struct Node * head;
    struct Node * second;
    struct Node * third;
    struct Node * fourth;
    struct Node * fifth;
    struct Node * sixth;
    struct Node * seventh;
    struct Node * eight;
    struct Node * nineth;

    head = (struct Node *)malloc(sizeof(struct Node));
    second = (struct Node *)malloc(sizeof(struct Node));
    third = (struct Node *)malloc(sizeof(struct Node));
    fourth = (struct Node *)malloc(sizeof(struct Node));
    fifth = (struct Node *)malloc(sizeof(struct Node));
    sixth = (struct Node *)malloc(sizeof(struct Node));
    seventh = (struct Node *)malloc(sizeof(struct Node));
    eight = (struct Node *)malloc(sizeof(struct Node));
    nineth = (struct Node *)malloc(sizeof(struct Node));

    head->data = 4;
    head -> next = second;

    second->data = 3;
    second->next = third;

    third->data = 8;
    third->next = fourth;

    fourth->data = 1;
    fourth->next = fifth;

    fifth->data = 200;
    fifth->next = sixth;

    sixth->data = 300;
    sixth->next = seventh;

    seventh->data = 400;
    seventh->next = eight;

    eight->data = 500;
    eight->next = nineth;

    nineth->data = 600;
    nineth->next = NULL;

    printf("Linked List before deletion\n"); 
    linkedlistTraversal(head);
    head=deleteFirst(head);     //if we write this one more time then two nodes will get deleted
    head=deleteAtIndex(head,2);  //2 is index number
    head=deleteAtEnd(head);
    head=deletegivenNode(head,400); //Given Node means,given value will get deleted from LL
    printf("\nLinked List after deletion\n");   
    linkedlistTraversal(head);
    return 0;
}
